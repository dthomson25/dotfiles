#!/usr/bin/env bash

# General
alias ll='ls -l'
alias la='ls -A'
alias lla='ls -lA'
alias diff='colordiff'

# Git
alias g='git'

function decode() {
  echo $1 | base64 --decode
}

function git_main_branch() {
  if [[ -n "$(git branch --list main)" ]]; then
    echo main
  else
    echo master
  fi
}

alias ga='git add'
alias gaa='git add --all'
alias gapa='git add --patch'
alias gb='git branch'
alias gbd='git branch -d'
alias gbD='git branch -D'
alias gc='git commit -v'
alias gcm='git commit -m'
alias gc!='git commit -v --amend'
alias gclean='git clean -id'
alias gcom='git checkout $(git_main_branch)'
alias gco='git checkout'
alias gcor='git checkout $(git branch --sort="-committerdate" | head -n 100 | fzf)'
alias gcp='git cherry-pick'
alias gcpa='git cherry-pick --abort'
alias gcpc='git cherry-pick --continue'
alias gs="git status"
alias gco='git checkout'
alias gco.='git checkout .'
alias gcob='git checkout -b'
alias undo-commit='git reset HEAD~1'
alias undo-ammend='git reset HEAD@{1}'

alias gd='git diff'
alias gdf='git diff | git-split-diffs --color | less -r'
alias gdca='git diff --cached'
alias gdfca='git diff --cached | git-split-diffs --color | less -r'
alias gdcw='git diff --cached --word-diff'
alias gdct='git describe --tags $(git rev-list --tags --max-count=1)'
alias gds='git diff --staged'
alias gdt='git diff-tree --no-commit-id --name-only -r'
alias gdw='git diff --word-diff'
alias dc='git diff --cached'

alias gf='git fetch'
alias gfa='git fetch --all --prune'
alias gfo='git fetch origin'

func gp() {
  BRANCH="$(git rev-parse --abbrev-ref HEAD)"
  if [[ "$BRANCH" = "main" ]]; then
    echo 'Pushing on main use gpm';
    return
  fi
  g push
}

func gpo() {
  url=$(gp | grep -o 'http[s]\?://[^ ]*');
  echo $url
  open $url
}

func gpm() {
  BRANCH="$(git rev-parse --abbrev-ref HEAD)"
  if [[ "$BRANCH" != "main" ]]; then
    echo 'Not pushing on main use gp';
    return
  fi
  g push
}
func gpf() {
  BRANCH="$(git rev-parse --abbrev-ref HEAD)"
  if [[ "$BRANCH" = "main" ]]; then
    echo 'Pushing on main use gpfm';
    return
  fi
  g push --force-with-lease
}
func gpfm() {
  BRANCH="$(git rev-parse --abbrev-ref HEAD)"
  if [[ "$BRANCH" != "main" ]]; then
    echo 'Not pushing on main use gpf';
    return
  fi
  g push --force-with-lease
}
alias gpd='git push --dry-run'
alias gpoat='git push origin --all && git push origin --tags'
alias gpu='git push upstream'
alias gpv='git push -v'

alias gl='git pull'
alias glg='git log --stat'
alias glgp='git log --stat -p'
alias glgg='git log --graph'
alias glgga='git log --graph --decorate --all'
alias glgm='git log --graph --max-count=10'
alias glo='git log --oneline --decorate'
alias glol="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'"
alias glols="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --stat"
alias glod="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'"
alias glods="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset' --date=short"
alias glola="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --all"
alias glog='git log --oneline --decorate --graph'
alias gloga='git log --oneline --decorate --graph --all'
alias glp="_git_log_prettily"

alias grb='git rebase'
alias grba='git rebase --abort'
alias grbc='git rebase --continue'
alias grbd='git rebase develop'
alias grbi='git rebase -i'
alias grbm='git rebase $(git_main_branch)'
alias grbs='git rebase --skip'

# Kubernetes
alias kctx='kubectl ctx'
alias kns='kubectl ns'
alias ked='kubectl edit'
[ -f ~/dotfiles/.kube-aliases ] && source ~/dotfiles/.kube-aliases

alias kevents='kubectl get events --sort-by=.metadata.creationTimestamp'
alias kro='kubectl argo rollouts'

alias okteto-on='kubectl get pod -l dev.okteto.com=true'
alias mysql-dev='kpf $(kgpo -o name -l app.kubernetes.io/name=mysql) 3307:3306'

# VSCode

alias api='cd ~/Development/api'
alias plat='cd ~/Development/platform'
alias code-api='code ~/Development/api'
alias code-plat='code ~/Development/platform'

# Misc
alias whatismyip='dig @resolver1.opendns.com ANY myip.opendns.com +short'


# FIND PROCESS
function p(){
        ps aux | grep -i $1 | grep -v grep
}

# KILL ALL
function ka(){

    ps aux | grep -i $1 | grep -v grep

    ps aux  |  grep -i $1 |  grep -v grep   | awk '{print $2}' | xargs kill 
}
